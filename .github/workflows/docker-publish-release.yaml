name: Create Release and Upload Assets

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Get Release Date
        run: |
          RELEASE_DATE=$(date +%Y-%m-%d)
          echo "RELEASE_DATE<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_DATE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Generate changelog
        id: changelog
        run: |
          LOG=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:'* %s by @%an in %H')
          echo "LOG<<EOF" >> $GITHUB_ENV
          echo "$LOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          CONTRIBUTORS=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:'%an' | sort -u | awk '{print "* @" $0}')
          echo "CONTRIBUTORS<<EOF" >> $GITHUB_ENV
          echo "$CONTRIBUTORS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }},${{ env.RELEASE_DATE }}
          body: |
            ## What's Changed
            ${{ env.LOG }}

            ## New Contributors
            ${{ env.CONTRIBUTORS }}
          draft: false
          prerelease: false

      # docker
      - name: Archive docker files
        run: |
          tar -cvzf app.tar.gz log docker-compose.yaml config.yaml data.yaml

      - name: Upload assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app.tar.gz
          asset_name: app.tar.gz
          asset_content_type: application/gzip
